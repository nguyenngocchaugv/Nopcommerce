@model ProductReviewsModel

<script>
    console.log("TEST");
    var showReview = false;
    $(".write-review").on("click", function() {
        showReview = !showReview;
        var s1 = @T("Reviews.Write");
        var s2 = "CLOSE REVIEW FORM";
        if (showReview) {
            $("#review-form .title").html("<strong>" + s2 + "</strong>");
        } else {
            $("#review-form .title").html("<strong>" + s1 + "</strong>");
        }
        console.log(showReview);
        console.log($("#review-form .title").html());
    });
</script>

<div class="page product-reviews-page">
    <div class="page-body">
        <div class="write-review" id="review-form">
            <div class="title">
                <strong>@T("Reviews.Write")</strong>
            </div>
        </div>
        @if (Model.Items.Count > 0)
        {
            <div class="product-review-list">
                @foreach (var review in Model.Items)
                {
                    var ratingPercent = review.Rating * 20;
                    <div class="product-review-item">
                        <div class="review-item-head">
                            <div class="review-title">
                                <strong>@review.Title</strong>
                            </div>
                            <div class="product-review-box">
                                <div class="rating">
                                    <div style="width: @(ratingPercent)%">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="review-text">
                            @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                        </div>
                        <div class="review-info">
                            <span class="user">
                                <strong>@T("Reviews.From"):</strong>
                                @if (review.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                }
                                else
                                {
                                    @review.CustomerName
                                }
                            </span>
                            <span class="separator">|</span>
                            <span class="date">
                                @review.WrittenOnStr
                            </span>
                        </div>
                        @await Html.PartialAsync("_ProductReviewHelpfulness", review.Helpfulness)
                    </div>
                }
            </div>
        }
    </div>
</div>
