@model IList<CategoryModel>
@if (Model.Count > 0)
{
    var subCategories = Model.Where(n => n.ParentCategoryId != 0).ToList();
    @foreach (var item in Model)
    {
        if (item.ParentCategoryId == 0)
        {
            <div class="spc spc-categories landscape">
                <div class="spc-body">
                    <div class="spc-categories-left">
                        <div class="category-info">
                            <div class="category-picture">
                                <a><img src="@item.PictureModel.ImageUrl"/></a>
                            </div>
                            <div class="category-details">
                                <h2 class="category-title">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">@item.Name</a>
                                </h2>
                                @if (subCategories.Count > 0)
                                {
                                    <ul class="category-sublist">
                                    @foreach(var sub in subCategories)
                                    {
                                        if(sub.ParentCategoryId == item.Id)
                                        {
                                            <li><a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">@sub.Name</a></li>
                                        }

                                    }
                                    </ul>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="spc-categories-right">
                        <div class="navigation-wrapper">
                            <ul class="navigation">
                                <li class="tab"><span value="0">Most Wanted</span></li>
                                <li class="tab active"><span value="1">Best Sellers</span></li>
                                <li class="tab"><span value="2">New Products</span></li>
                            </ul>
                        </div>
                        <div class="category-products">
                            <div class="product-grid most-wanted">This is Most Wanted</div>
                            <div class="product-grid best-sellers">@await Component.InvokeAsync("HomepageBestSellers", new { categoryId = item.Id })</div>
                            <div class="product-grid new-products">This is New Products</div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
            


    @*<div class="category-grid home-page-category-grid">
        <div class="title sub-title col-md-12">
            <strong>@T("Categories")</strong>
        </div>
        <div class="row">
            @if (Model.Count <= 3)
            {
                foreach (var item in Model)
                {
                    <div class="item-box col-xs-12 col-sm-4 col-md-4">
                        <div class="category-item product-category-item">
                            <div class="picture">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title" class="product-img">
                                    <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                </a>
                                <div class="title">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title"> @item.Name</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div id="home-category-slider" class="home-category-slider">
                    @foreach (var item in Model)
                    {
                        <div class="item-box col-xs-12 col-sm-12 col-md-12">
                            <div class="category-item product-category-item">
                                <div class="picture">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title" class="product-img">
                                        <img class="owl-lazy" data-src="@item.PictureModel.ImageUrl" alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                    </a>
                                    <div class="title">
                                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title"> @item.Name</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>*@
}
<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        $(".navigation .tab span").click(
            function () {
                $(this).parents('.navigation').find('.tab').removeClass('active');
                $(this).parent('.navigation .tab').addClass('active');
                var tabID = $(this).attr('value');
                $(this).parents('.spc-categories-right').find('.product-grid').css('display', 'none');
                switch (tabID) { 
                    case '0':
                        $(this).parents('.spc-categories-right').find('.most-wanted').css('display', 'block');
                        break;
                    case '1':
                        $(this).parents('.spc-categories-right').find('.best-sellers').css('display', 'block');
                        break;
                    case '2':
                        $(this).parents('.spc-categories-right').find('.new-products').css('display', 'block');
                        break;
                }
            }
        );
    });
</script>